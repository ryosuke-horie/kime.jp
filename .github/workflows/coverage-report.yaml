name: Publish Coverage Report

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  publish:
    name: Publish Coverage Report
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0
        
      - name: Download coverage artifacts
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            
            const matchArtifact = artifacts.data.artifacts.find(artifact => {
              return artifact.name === "coverage-reports"
            });
            
            if (!matchArtifact) {
              core.setFailed('No coverage artifacts found');
              return;
            }
            
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip'
            });
            
            const fs = require('fs');
            fs.writeFileSync('${{ github.workspace }}/coverage-reports.zip', Buffer.from(download.data));
      
      - name: Unzip artifact
        run: |
          mkdir -p coverage-reports
          unzip -o coverage-reports.zip -d coverage-reports || echo "Warning: Unzip failed or no contents"
          ls -la coverage-reports || echo "No files found in coverage-reports"
      
      - name: Setup build directory
        run: |
          mkdir -p _site
          # HTMLレポートディレクトリの有無を確認
          if [ -d "coverage-reports" ]; then
            cp -r coverage-reports/* _site/ || echo "Warning: No files to copy"
            echo "<html><head><title>Kime.jp Coverage Reports</title></head><body><h1>Coverage Reports</h1><ul>" > _site/index.html
            
            # カバレッジレポートのディレクトリ構造を把握
            echo "Coverage directory structure:" 
            find coverage-reports -type d | sort
            
            # HTMLレポートを探索して一覧を作成
            found_reports=false
            for app in "apps/web" "apps/workers"; do
              if [ -d "coverage-reports/$app/coverage/html" ]; then
                relative_path="${app}/coverage/html"
                echo "<li><a href=\"$relative_path/index.html\">$app</a></li>" >> _site/index.html
                found_reports=true
              elif [ -d "_site/$app/coverage/html" ]; then
                relative_path="${app}/coverage/html"
                echo "<li><a href=\"$relative_path/index.html\">$app</a></li>" >> _site/index.html
                found_reports=true
              fi
            done
            
            # レポートが見つからない場合のフォールバック
            if [ "$found_reports" = false ]; then
              find _site -type d -name "html" | sort | while read dir; do
                relative_path="${dir#_site/}"
                parent_dir=$(dirname "$relative_path")
                echo "<li><a href=\"$relative_path/index.html\">$parent_dir</a></li>" >> _site/index.html
              done
            fi
            
            echo "</ul></body></html>" >> _site/index.html
          else
            echo "<html><head><title>Kime.jp Coverage Reports</title></head><body><h1>No Coverage Reports Available</h1></body></html>" > _site/index.html
          fi
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
