name: Packages CI

on:
  push:
    branches: ["main"]
    paths:
      - '.github/workflows/packages.yaml'  # 自身のワークフローファイル
      - 'packages/**'                      # パッケージのソースコード全体
      - 'biome.json'                       # Biome設定
      - 'lefthook.yml'                     # Lefthook設定
      - 'config/biome/**'                  # Biome設定ディレクトリ
      - 'package.json'                     # ルートパッケージ設定
      - 'pnpm-workspace.yaml'              # PNPM ワークスペース設定
      - 'tsconfig.base.json'               # ベースTypeScript設定
  pull_request:
    types: [opened, synchronize]
    paths:
      - '.github/workflows/packages.yaml'  # 自身のワークフローファイル
      - 'packages/**'                      # パッケージのソースコード全体
      - 'biome.json'                       # Biome設定
      - 'lefthook.yml'                     # Lefthook設定
      - 'config/biome/**'                  # Biome設定ディレクトリ
      - 'package.json'                     # ルートパッケージ設定
      - 'pnpm-workspace.yaml'              # PNPM ワークスペース設定
      - 'tsconfig.base.json'               # ベースTypeScript設定

# 同一PRの古いジョブを自動的にキャンセルする設定
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get-packages.outputs.packages }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - id: get-packages
        name: Get Packages
        run: |
          echo "packages=[\"packages/api-client\",\"packages/api-types\",\"packages/db\",\"packages/testing-utils\"]" >> $GITHUB_OUTPUT

  build:
    name: Build - ${{ matrix.package }}
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Extract package name
        id: package-name
        run: |
          # パスからパッケージ名を抽出 (例: packages/api-client → @kime/api-client)
          PACKAGE_DIR="${{ matrix.package }}"
          PACKAGE_NAME=$(node -e "console.log(require('./${PACKAGE_DIR}/package.json').name)")
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Build
        run: pnpm --filter=${{ steps.package-name.outputs.name }} build

  lint:
    name: Lint - ${{ matrix.package }}
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Extract package name
        id: package-name
        run: |
          # パスからパッケージ名を抽出 (例: packages/api-client → @kime/api-client)
          PACKAGE_DIR="${{ matrix.package }}"
          PACKAGE_NAME=$(node -e "console.log(require('./${PACKAGE_DIR}/package.json').name)")
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Lint
        run: pnpm --filter=${{ steps.package-name.outputs.name }} lint

      - name: Format Check
        run: pnpm --filter=${{ steps.package-name.outputs.name }} format

  typecheck:
    name: Type Check - ${{ matrix.package }}
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Extract package name
        id: package-name
        run: |
          # パスからパッケージ名を抽出 (例: packages/api-client → @kime/api-client)
          PACKAGE_DIR="${{ matrix.package }}"
          PACKAGE_NAME=$(node -e "console.log(require('./${PACKAGE_DIR}/package.json').name)")
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Build API Types (dependency)
        run: pnpm --filter=@kime/api-types build

      - name: Run type checking
        run: pnpm --filter=${{ steps.package-name.outputs.name }} typecheck